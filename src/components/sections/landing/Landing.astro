---
import CountDownTimer from '@src/components/elements/CountDownTimer.astro';
import AddToCalendar from '@src/components/elements/calendar/AddToCalendar.astro';

const today = new Date();

const currentDay = today.getDate();
const currentMonth = today.getMonth();
const currentYear = today.getFullYear();

const conferenceYear = 2025;
const conferenceMonth = 4;

function formatDateString(day) {
	const date = new Date(conferenceYear, conferenceMonth, day);
	const month = date.toLocaleString('default', { month: 'long' });
	return `${month} ${day}${getOrdinalSuffix(day)}, ${conferenceYear}`;
}

function getOrdinalSuffix(day) {
	if (day > 3 && day < 21) return 'th';
	switch (day % 10) {
		case 1:
			return 'st';
		case 2:
			return 'nd';
		case 3:
			return 'rd';
		default:
			return 'th';
	}
}

let heading = 'Happening Now!';
let subtext = '';

const isAfterConference =
	currentYear > conferenceYear ||
	(currentYear === conferenceYear && currentMonth > conferenceMonth) ||
	(currentYear === conferenceYear &&
		currentMonth === conferenceMonth &&
		currentDay > 11);

if (isAfterConference) {
	heading = 'Conference Concluded!';
	subtext =
		'Thank you to everyone who attended and made this conference possible!';
} else if (
	currentYear === conferenceYear &&
	currentMonth === conferenceMonth &&
	currentDay === 11
) {
	subtext = `<b>Day 3:</b> ${formatDateString(12)}`;
} else {
	subtext = `<b>Day 2:</b> ${formatDateString(11)}`;
}
---

<div class="relative h-[120vh] overflow-hidden md:h-[140vh]">
	<div
		class="parallax-layer absolute left-0 top-0 h-[100vh] w-[80vh] sm:w-auto"
	>
		<img
			class="h-[200vh] w-[200vh] object-cover object-top"
			src="/parallax/background-layer-e.svg"
			alt="Background Layer"
		/>
	</div>
	<div class="parallax-layer absolute top-0 h-[100vh] w-[80vh] sm:w-auto">
		<img
			class="h-[200vh] w-[200vh] object-cover object-top"
			src="/parallax/background-mountain-left-layer-d.svg"
			alt="Background Layer"
		/>
	</div>
	<div
		class="parallax-layer absolute left-0 top-0 h-[100vh] w-[80vh] sm:w-auto"
	>
		<img
			class="h-[200vh] w-[200vh] object-cover object-top"
			src="/parallax/background-mountain-right-layer-d.svg"
			alt="Background Layer"
		/>
	</div>
	<div
		class="parallax-layer absolute left-0 top-0 h-[100vh] w-[80vh] sm:w-auto"
	>
		<img
			class="h-[200vh] w-[200vh] object-cover object-top"
			src="/parallax/middleground-layer-c.svg"
			alt="Background Layer"
		/>
	</div>
	<div
		class="parallax-layer absolute left-0 top-0 h-[100vh] w-[80vh] sm:w-auto"
	>
		<img
			class="h-[200vh] w-[200vh] object-cover object-top"
			src="/parallax/foreground-layer-b.svg"
			alt="Background Layer"
		/>
	</div>
	<div
		class="parallax-layer absolute left-0 top-0 z-20 h-[100vh] w-[80vh] sm:h-auto sm:w-auto"
	>
		<img
			class="h-[240vh] w-[200vh] object-cover object-top md:mt-[10rem] lg:h-[260vh] xl:h-[280vh]"
			src="/parallax/transition-layer-a.svg"
			alt="Background Layer"
		/>
	</div>

	<div class="parallax-text fixed inset-0 z-30 py-24 md:py-0">
		<section
			class="flex h-screen w-screen flex-col items-start justify-start gap-4 p-5 sm:justify-center sm:p-10 md:p-14 lg:p-20"
		>
			<div class="mb-0 flex flex-col gap-2">
				<div
					class="mb-0 flex flex-col items-start justify-start gap-4 md:flex-row md:items-center"
				>
					<p class="mb-0 text-xl font-bold text-white lg:text-2xl">
						May 9 - 11, 2025
					</p>
					<div class="hidden sm:inline">
						<AddToCalendar
							id="playground-conference-dates"
							title="Western Canadian Undergraduate Chemistry Conference"
							description="Come join us for the western canadian undergraduate chemistry conference for 2025. This year, we have some amazing speakers and networking opportunities for you to explore!"
							location="The University of British Columbia"
							startDate="2025-05-07T08:00:00"
							endDate="2025-05-12T20:00:00"
						>
							Add to Calendar
						</AddToCalendar>
					</div>
				</div>
				<p
					class="mb-0 hidden p-0 text-2xl font-medium text-white md:inline-block lg:text-3xl"
				>
					Western Canadian Undergraduate Chemistry Conference
				</p>
			</div>
			<div class="flex flex-col gap-2">
				<h1
					class="border-[1px] text-7xl font-bold text-white outline-black sm:text-[5rem] lg:text-[7.8rem]"
				>
					WCUCC 2025
				</h1>
				<h1 class="mb-0 text-4xl font-semibold text-white lg:text-5xl">
					Discover how we<br class="sm:hidden" />
					<span id="typer" class="mb-0 text-white"></span>
				</h1>
				<div
					class="between flex flex-col items-start gap-4 md:flex-row md:items-center"
				>
					<h4
						class="my-0 text-2xl font-medium text-white lg:text-3xl"
					>
						@ University of British Columbia, Okanagan
					</h4>
					<a
						class="hidden w-fit rounded-md bg-[#0058E5] px-4 py-1.5 text-[1.1rem] font-semibold text-white shadow-black transition-all duration-200 hover:cursor-pointer hover:bg-[#173d9b] hover:shadow sm:inline-block sm:w-auto"
						href="https://www.google.ca/maps/place/The+University+of+British+Columbia+-+Okanagan+Campus/@49.9398234,-119.3989527,17z/data=!3m1!4b1!4m5!3m4!1s0x537ded7da291f011:0x7ca879b9058df1a4!8m2!3d49.93982!4d-119.396764"
						style="text-decoration: none; z-index: 100;"
						>Get Directions</a
					>
					<div
						class="flex flex-row items-start justify-start gap-4 sm:hidden"
					>
						<AddToCalendar
							id="playground-conference-dates"
							title="Western Canadian Undergraduate Chemistry Conference"
							description="Come join us for the western canadian undergraduate chemistry conference for 2025. This year, we have some amazing speakers and networking opportunities for you to explore!"
							location="The University of British Columbia"
							startDate="2025-05-07T08:00:00"
							endDate="2025-05-12T20:00:00"
						>
							Add to Calendar
						</AddToCalendar>
						<a
							class="w-fit rounded-md bg-[#0058E5] px-4 py-1.5 text-[1.1rem] font-semibold text-white shadow-black transition-all duration-200 hover:cursor-pointer hover:bg-[#173d9b] hover:shadow sm:w-auto"
							href="https://www.google.ca/maps/place/The+University+of+British+Columbia+-+Okanagan+Campus/@49.9398234,-119.3989527,17z/data=!3m1!4b1!4m5!3m4!1s0x537ded7da291f011:0x7ca879b9058df1a4!8m2!3d49.93982!4d-119.396764"
							style="text-decoration: none; z-index: 100;"
							>Directions</a
						>
					</div>
				</div>
			</div>
			<!-- <CountDownTimer targetDate="2025-05-09T08:00:00" /> -->
			<div class="flex flex-col gap-4 pt-6">
				<p
					class="mb-0 font-bold text-[#FFFFFF] lg:text-3xl"
					style="font-size: 3rem;"
				>
					{heading}
				</p>
				<p
					class="mb-0 font-normal text-white lg:text-2xl"
					style="font-size: 1.6rem;"
					set:html={subtext}
				/>
			</div>
		</section>

		<div class="h-screen"></div>
	</div>

	<script is:inline>
		const layers = document.querySelectorAll('.parallax-layer');
		let transitionSpeed = window.innerWidth < 1380 ? 0.55 : 1;

		//				[e,  d,   d,    c,   b]
		let speeds = [0.2, 0.24, 0.28, 0.35, 0.4, transitionSpeed];

		window.addEventListener('resize', () => {
			speeds[speeds.length - 1] = window.innerWidth < 1400 ? 0.55 : 1;
		});

		const parallaxText = document.querySelector('.parallax-text');

		window.addEventListener('scroll', () => {
			const scrolled = window.pageYOffset || window.scrollY; // pageYOffset || scrollY is used to ensure compatability with legacy browsers.

			layers.forEach((layer, index) => {
				layer.classList == 'parallax-layer layer-a' &&
					console.log(layer);
				const yPos = -(scrolled * speeds[index]);
				layer.style.transform = `translateY(${yPos}px)`;
			});

			const yPosTxt = -(scrolled * 0.6);
			parallaxText.style.transform = `translateY(${yPosTxt}px)`;
		});
	</script>

	<script>
		import Typed from 'typed.js';

		let idx = 0;
		const colors = [
			'#e0ff4f',
			'#ff6663',
			'#a51080',
			'#70E6D2',
			'#8F192D',
			'#CBE5C8',
			'#E393BA',
			'#C54640',
			'#1740B1',
			'#9E86C7',
			'#DF948A',
		];

		new Typed('#typer', {
			strings:
				'innovate, create, design, synthesize, pipette, analyze, experiment, teach, learn'.split(
					', '
				),
			typeSpeed: 100,
			backSpeed: 50,
			backDelay: 1000,
			smartBackspace: true,
			loop: true,
			shuffle: false,
			preStringTyped: (_, self) => {
				if (idx == colors.length) idx = 0;
				// @ts-ignore
				self.el.style.color = colors[idx];
				idx++;
			},
		});
	</script>
</div>

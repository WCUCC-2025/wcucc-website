---
interface Props {
  targetDate: string;
}

const { targetDate } = Astro.props;
---

<div id="countdown" class="-ml-2 rounded-lg text-white text-center z-40">
  <div class="grid grid-cols-4 gap-2 text-4xl md:text-6xl font-normal">
    <div>
      <span class="countdown-days">00</span>
      <div class="text-xl md:text-2xl mt-2">Days</div>
    </div>
    <div>
      <span class="countdown-hours">00</span>
      <div class="text-xl md:text-2xl mt-2">Hours</div>
    </div>
    <div>
      <span class="countdown-minutes">00</span>
      <div class="text-xl md:text-2xl mt-2">Minutes</div>
    </div>
    <div>
      <span class="countdown-seconds">00</span>
      <div class="text-xl md:text-2xl mt-2">Seconds</div>
    </div>
  </div>
</div>

<script is:inline define:vars={{ targetDate }}>
  function updateCountdown() {
    const daysEl = document.querySelector('.countdown-days');
    const hoursEl = document.querySelector('.countdown-hours');
    const minutesEl = document.querySelector('.countdown-minutes');
    const secondsEl = document.querySelector('.countdown-seconds');

    if (!daysEl || !hoursEl || !minutesEl || !secondsEl) return;

    const target = new Date(targetDate).getTime();
    
    function update() {
      const now = new Date().getTime();
      const distance = target - now;

      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      daysEl.textContent = days.toString().padStart(2, '0');
      hoursEl.textContent = hours.toString().padStart(2, '0');
      minutesEl.textContent = minutes.toString().padStart(2, '0');
      secondsEl.textContent = seconds.toString().padStart(2, '0');

      if (distance < 0) {
        clearInterval(interval);
        daysEl.textContent = '00';
        hoursEl.textContent = '00';
        minutesEl.textContent = '00';
        secondsEl.textContent = '00';
      }
    }

    update();
    const interval = setInterval(update, 1000);

    return () => clearInterval(interval);
  }

  updateCountdown();
  document.addEventListener('astro:mount', updateCountdown);
</script>
